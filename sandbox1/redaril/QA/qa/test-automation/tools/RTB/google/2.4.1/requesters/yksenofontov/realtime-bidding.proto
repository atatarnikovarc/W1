// This is the message that Google uses to request bids.  A single BidRequest
// includes all applicable ad slots from a single impression.
//
message BidRequest {
  // This is deprecated.  Please ignore.
  optional int32 DEPRECATED_protocol_version = 1;

  // Unique request id generated by Google.  This is 16 bytes long.
  required bytes id = 2;

  // This is deprecated.  Please use CLICK_URL macro in the HTML snippet
  // instead.
  optional string DEPRECATED_click_tracking_url = 3;

  // -----------------------------------------------------------
  // This section lists information that we know about the user.

  // The first 3 bytes of the IP address in network byte order for IPv4, or the
  // first 6 bytes bytes for IPv6.  Note that the number and position of the
  // bytes included from IPv6 addresses is subject to later change.
  optional bytes ip = 4;

  // This is deprecated.  Please use google_user_id instead.
  optional uint64 DEPRECATED_cookie = 5;

  // This is deprecated.  Please use google_user_id instead.
  optional bytes DEPRECATED_hashed_cookie = 16;

  // This is the Google ID for the user as described in the documentation for
  // the cookie matching service.  This field is the unpadded web-safe base64
  // encoded version of a binary cookie id. See "Base 64 Encoding with URL and
  // Filename Safe Alphabet" section in RFC 3548 for encoding details.  This
  // field corresponds exactly to the Google ID returned by the cookie matching
  // service.
  optional string google_user_id = 21;

  // The version number of the google_user_id.  We may sometimes change the
  // mapping from cookie to google_user_id.  In this case the version will be
  // incremented.
  optional uint32 cookie_version = 20;

  // The time in seconds since the google_user_id was created.
  optional int32 cookie_age_seconds = 31;

  // A string that identifies the browser and type of device that sent the
  // request.
  optional string user_agent = 6;

  // Geo information.  These use the same codes as the AdWords API.  The
  // documentation for the codes is at
  // http://code.google.com/apis/adwords/docs/appendix/geotargeting.html
  optional string country = 7;
  optional string region = 8;
  optional string city = 9;
  optional int32 metro = 10;

  // Detected postal code of the appropriate type for the country (e.g. zip code
  // if the country is "US").  The postal_code_prefix field is set when accuracy
  // is too low to imply a full code, otherwise the postal_code field is set.
  optional string postal_code = 33;
  optional string postal_code_prefix = 34;

  // The offset of the user's time from GMT in minutes.  For example, GMT+10 is
  // timezone_offset = 600.
  optional int32 timezone_offset = 25;

  // List of detected user verticals.
  repeated int32 user_vertical = 30 [packed=true];

  // Lists that the user belongs to.
  //
  message UserList {
    // The user list id.
    optional int64 id = 1;

    // The time in seconds since the user was added to the list.
    optional int32 age_seconds = 2;
  }
  repeated UserList user_list = 32;

  // -----------------------------------------------------------
  // This section lists information that we know about the web page or mobile
  // application where the impression originates.

  // The name of the network that is selling the inventory.  For example, this
  // field is set to "GCN" for impressions from the Google Content Network.
  // This is only set if the site is not anonymous and the publisher allows site
  // targeting.
  optional string seller_network = 22;

  // The full referrer url.  This is only set if the site is not anonymous and
  // the publisher allows site targeting.  You can use the anonymous_id for
  // targeting if the inventory is anonymous.  Otherwise, you can use the
  // verticals.
  optional string url = 11;

  // An id for the domain of the page.  It is set when the inventory is
  // anonymous.
  optional string anonymous_id = 19;

  // The ISO 639-1 two-letter code for the language of the page.  The
  // documentation for the codes is at
  // http://code.google.com/apis/adwords/docs/appendix/languagecodes.html
  optional string detected_language = 12;

  // One or more detected verticals for the page as determined by Google.
  //
  message Vertical {
    // The vertical id.  See the publisher-verticals.txt file in the technical
    // documentation for a list of ids.
    required int32 id = 1;

    // Weight for this vertical, in the (0.0, 1.0] range.  More relevant
    // verticals have higher weights.
    required float weight = 2;
  }

  // Unordered list of detected content verticals.  See the
  // publisher-verticals.txt file in the technical documentation for a list of
  // ids.
  repeated Vertical detected_vertical = 13;

  // The dictionary version used in the detected_vertical field.
  optional int32 vertical_dictionary_version = 24;

  // List of detected content labels.  See content-labels.txt file in the
  // technical documentation for a list of ids.
  repeated int32 detected_content_label = 26 [packed=true];

  // Site lists.  See site-lists.txt file in the technical documentation for a
  // list of ids.
  repeated int32 site_list_id = 36;

  // Information for targeting mobile applications.
  //
  message MobileApp {
    // The name of the app.
    optional string app_name = 1;

    // The name of the company publishing the app.
    optional string company_name = 2;

    // The platform of the mobile device.  For example android, iphone, palm.
    optional string platform = 3;

    // The name of the carrier, e.g. t-mobile.
    optional string carrier_name = 4;

    // The country of the carrier, e.g. jp.
    optional string carrier_country = 5;
  }

  optional MobileApp mobile_app = 28;

  // Information about the video if this is an in-video ad request.
  //
  message Video {
    // The time in millisecs from the start of the video when the ad will be
    // displayed.  0 means pre-roll and -1 means post-roll.  The value is valid
    // only if this param is set.  When not set, the display position is
    // unknown.
    optional int32 videoad_start_delay = 1;

    // The maximum duration in millisecs of the ad that you should return.  If
    // it is not set or has value <= 0, any duration is allowed.
    optional int32 max_ad_duration = 2;
  }
  optional Video video = 29;

  // This is deprecated.  Please ignore.
  repeated string DEPRECATED_excluded_click_through_url = 18;

  // The publisher settings list id that applies to this page. See the Refining
  // Targeting section of the RTB documentation for details.
  optional bytes publisher_settings_list_id = 23;

  // This is deprecated.  Please ignore.
  message MatchingNetwork {
    // This is deprecated.  Please ignore.
    optional string DEPRECATED_network_id = 1;

    // This is deprecated. Please ignore.
    optional string DEPRECATED_google_user_id = 2;
  }
  repeated MatchingNetwork DEPRECATED_matching_network = 27;

  // -----------------------------------------------------------
  // Information about the adslots on the page.
  //
  message AdSlot {

    // An arbitrarily assigned slot id that is unique on a given page and
    // usually starts counting from 1.  You use this to identify which slot to
    // bid on in the BidResponse.
    required int32 id = 1;

    // Set of channels of which this ad slot is a member.  A channel is a set of
    // ad slots on a site.  You can target a channel (like "the sports section",
    // or "all top banners") to get more fine-grained control over where your ad
    // shows.  Channel names are provided by the publisher.
    repeated string targetable_channel = 10;

    // The width and height in pixels of the allowed ad sizes.  Most requests
    // allow only a single size, but some allow more than one.  Widths and
    // heights must be at the same index.  For example, if the width values are
    // [728, 300, 468] and the height values are [90, 250, 60], then the allowed
    // formats are 728x90, 300x250, and 468x60.
    repeated int32 width = 2;
    repeated int32 height = 3;

    // The disallowed attribute ids for the ads that can show in this slot. See
    // the creative-attributes.txt file in the technical documentation for a
    // list of ids.
    repeated int32 excluded_attribute = 4 [packed=true];

    // This is deprecated.  Please use excluded_attribute instead.
    repeated int32 DEPRECATED_allowed_attribute = 5;

    // The allowed vendor types.  See the vendors.txt file in the technical
    // documentation for a list of ids.  When the seller_network is GCN, the
    // vendor ids listed in gdn-vendors.txt in the supporting technical
    // documentation are also allowed.
    repeated int32 allowed_vendor_type = 6 [packed=true];

    // The disallowed sensitive ad categories.  See the
    // ad-sensitive-categories.txt file in the technical documentation for a
    // list of ids.  You should enforce these exclusions if you have the ability
    // to classify ads into the listed categories.
    repeated int32 excluded_sensitive_category = 7 [packed=true];

    // The disallowed ad product categories. See the ad-product-categories.txt
    // file in the technical documentation for a list of ids.  You should
    // enforce these exclusions if you have the ability to classify ads into the
    // listed categories.
    repeated int32 excluded_product_category = 13 [packed=true];

    // This is deprecated.  Please ignore.
    repeated string DEPRECATED_excluded_click_through_url = 8;

    // Information about the pre-targeting campaigns and adgroups that matched.
    //
    message MatchingAdData {
      // This is deprecated.  Please ignore.
      optional int64 DEPRECATED_campaign_id = 1;

      // The adgroup id of the matching ad.
      optional int64 adgroup_id = 2;

      // This is deprecated.  Please ignore.
      optional bool DEPRECATED_per_buyer_minimum_cpm = 3;

      // This field is deprecated. See fixed_cpm_micros within direct_deal
      // instead.
      optional int64 DEPRECATED_fixed_cpm_micros = 4;

      // The minimum CPM value that you can bid to not be filtered before the
      // auction.  This may be a global minimum, or it may be a minimum set by
      // the publisher.  The value is in micros of your account currency.
      optional int64 minimum_cpm_micros = 5;

      // Information about any direct deals you matched for this inventory.
      message DirectDeal {
        // An id identifying the deal.
        optional int64 direct_deal_id = 1;

        // The fixed CPM deal that applies to your account for this adslot.  To
        // be considered, you must bid at least the value of fixed_cpm_micros,
        // and if you win, you will always be charged fixed_cpm_micros.  The
        // value is in micros of your account currency.  For example, if the
        // fixed cpm is 1290000 (1.29 in your account currency), you need to bid
        // at least this amount to be considered for this request.  If you win,
        // you will be charged a CPM of 1.29 in your account currency.
        optional int64 fixed_cpm_micros = 2;
      }
      repeated DirectDeal direct_deal = 6;
    }
    repeated MatchingAdData matching_ad_data = 9;

    // The publisher settings list ids that apply to this slot. See the Refining
    // Targeting section of the RTB documentation for details.
    repeated bytes publisher_settings_list_id = 11;

    // Visibility information for the slot.
    enum SlotVisibility  {
      NO_DETECTION = 0;
      ABOVE_THE_FOLD = 1;
      BELOW_THE_FOLD = 2;
    }
    optional SlotVisibility slot_visibility = 12 [default = NO_DETECTION];
  }
  repeated AdSlot adslot = 14;

  // -----------------------------------------------------------
  // Testing flags.

  // If true, then this is a test request.  Results will not be displayed to
  // users and you will not be billed for a response even if it wins the
  // auction.  You should still do regular processing since the request may be
  // used to evaluate latencies or for other testing.
  optional bool is_test = 15 [default=false];

  // If true, then this request is intended to measure network latency.  Please
  // return an empty but parseable BidResponse (containing any required fields)
  // as quickly as possible without executing any bidding logic.
  optional bool is_ping = 17 [default=false];

  // If true, then this request is using an experimental deadline greater than
  // the normal 120ms.  We will sometimes send a small number of requests with
  // experimental_deadline=true to evaluate the effect of different deadlines on
  // spend.  Requests with experimental_deadline=true are for real impressions
  // and you should bid on them normally.  However, if you use internal timeouts
  // to abort processing when it is taking too long as a way of keeping your
  // error rate low, then you can disable these internal timeouts for requests
  // with experimental_deadline=true.  The effect on your error rate will be
  // limited since we will only set this on a small percentage of requests.
  // Paying attention to experimental_deadline is optional, but you may choose
  // to do so if you would benefit from higher deadlines and therefore wish to
  // help us accurately measure the effect of raising them.
  optional bool experimental_deadline = 35 [default=false];
}

// This is the message that you return in response to a BidRequest.  You may
// specify a list of ads.  For each ad, you should provide a list of ad slots on
// which the ad can run.  Ad slots are identifed by the ids included in the
// BidRequest.  Each ad can win at most one ad slot.  If you do not wish to bid,
// please submit a response with no ads and just the processing_time_ms fields
// set.
//
message BidResponse {
  // This is deprecated.  Please do not set.
  optional int32 DEPRECATED_protocol_version = 1;

  message Ad {
    // A buyer-specific id identifying the creative in this ad.  If you choose
    // to set this field, then it can be used to communicate approval statuses
    // when issues are found.  Specifying the same ids for different creatives
    // will result in all creatives being disapproved in case a problem with a
    // single ad is found.  Specifying different ids for the same creative in
    // different responses will result in no creatives being served, as approval
    // status is assigned on a per-id basis.
    optional string buyer_creative_id = 10;

    // The HTML snippet that will display the ad when inserted in the web page.
    // Please use adslot.adgroup_id to indicate which adgroup this snippet is
    // attributed to.  The adgroup must be one of the adgroups for the slot sent
    // in the BidRequest.  Only one of html_snippet, creative_id, or video_url
    // should be set.  Only set this field if the BidRequest is NOT for an
    // in-video ad (BidRequest.video is NOT present).
    optional string html_snippet = 1;

    // Id of a creative hosted by Google.  Please use adslot.adgroup_id to
    // indicate which adgroup this creative belongs to.  We will check that the
    // creative is part of the adgroup and the adgroup is one of the adgroups
    // for the slot sent in the BidRequest.  Only one of html_snippet,
    // creative_id, or video_url should be set.
    optional int64 creative_id = 8;

    // The url to fetch a video ad.  The url should return an XML response that
    // conforms to the VAST 2.0 standard.  Please use adslot.adgroup_id to
    // indicate which adgroup to attribute this ad to.  The adgroup must be one
    // of the adgroups for the slot sent in the BidRequest.  Only one of
    // html_snippet, creative_id , or video_url should be set.  Only set this
    // field if the BidRequest is for an in-video ad (BidRequest.video is
    // present).
    optional string video_url = 9;

    // This is deprecated.  Please use the repeated click_through_url instead.
    optional string DEPRECATED_click_through_url = 2;

    // The set of destination urls for the snippet.  This should include the
    // urls that the user will go to if they click on the displayed ad, and any
    // urls that are visible in the rendered ad.  This data is used for
    // post-filtering of publisher-blocked urls.  A BidResponse that returns a
    // snippet or video ad but declares no click_through_urls will be discarded.
    // Only set this field if an HTML snippet or video ad is returned.
    repeated string click_through_url = 4;

    // All vendor types for the ads that may be shown from this snippet. You
    // should only declare vendor ids listed in the vendors.txt file in the
    // technical documentation. We will check to ensure that the vendors you
    // declare are in the allowed_vendor_type list sent in the BidRequest for
    // AdX publishers, or in gdn-vendors.txt for GCN publishers. Only set this
    // field if an HTML snippet is returned.
    repeated int32 vendor_type = 5;

    // All attributes for the ads that may be shown from this snippet.  See
    // creative-attributes.txt in the technical documentation for a list of ids.
    // We will check to ensure none of these attributes are in the
    // excluded_attribute list in the BidRequest.  Only set this field if an
    // HTML snippet or video ad is returned.
    repeated int32 attribute = 6;

    // All sensitive categories for the ads that may be shown from this snippet.
    // See ad-sensitive-categories.txt in the technical documentation for a list
    // of ids.  We will check to ensure none of these categories were in the
    // excluded_category list in the BidRequest.  If the
    // excluded_sensitive_category field in the BidRequest was non-empty, then
    // there must be at least one entry in this field or the ad will be
    // disqualified from the auction.  Only set this field if a snippet or video
    // ad is returned.
    repeated int32 category = 7;

    // Name(s) of the Ad's advertiser(s).
    repeated string advertiser_name = 11;

    message AdSlot {
      // The slot id from the BidRequest that the ad may appear in.
      required int32 id = 1;

      // The maximum CPM you want to be charged if you win the auction for this
      // ad slot, expressed in micros of your account currency.  For example, to
      // bid a CPM of 1.29 USD, set max_cpm_micros = 1290000.  Winning bids are
      // rounded up to billable units.  For example, in USD, bids will be
      // rounded up to the next multiple of 10,000 micros (one cent).
      required int64 max_cpm_micros = 2;

      // The minimum CPM you want to be charged if you win the auction for this
      // ad slot.  This may represent a second price if you choose max_cpm as
      // the highest of several bids, or some form of reserve price if you wish
      // to override the reserve price set by the publisher.  The bid must be
      // less than max_cpm_micros or it will be ignored.  This field is optional
      // and does not need to be set.
      optional int64 min_cpm_micros = 3;

      // Id of the adgroup to attribute this impression to.  The value must be
      // in the set of adgroups for this slot that were sent in the BidRequest.
      // If you return a creative by setting the creative_id field, then this
      // must be set and the creative_id must be in the chosen adgroup.  If the
      // matching_network field of the BidRequest contains any values, then this
      // must be set.
      optional int64 adgroup_id = 4;
    }
    repeated AdSlot adslot = 3;
  }
  repeated Ad ad = 2;

  // If is_test was set in the BidRequest, then you may return debug information
  // as plain text in this field.
  // Please do not set this field under normal conditions, or set it to values
  // longer than 100 characters. You should only use this field when asked to
  // do so as part of troubleshooting particular problems.
  optional string debug_string = 5;

  // Please set this to the processing time in milliseconds from when you
  // received the request to when you returned the response.
  optional int32 processing_time_ms = 4;
}
