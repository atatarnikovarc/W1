сайт вело-дил

7. сайт - велодил (velodil)
-выбор велосипеда
-поиск запчастей по всем магазинам города
-поиск вещей по всем магазинам города
-толкучка\барахолка - продать\подарить ненужное для велика
(сделать на django, потом на spring  - сравнить)
-получить помощь вело-механика
-вести лог обслуживания велосипеда
-доставка запчасти с указанного магазина
-web-service для интеграции со внешними системами
-rest-service - отдает даннные по товарам
-функция автоматической продажи рекламы - стучаться по серверам и ставить рекламу
-интеграция с vk.com
-интеграция с rtb или подобной службой у гугла
-работать с юзерами по кукам и фингерпринтам(кеш-сервер)
-android, ios приложения - для маршрутов по городу
-сравнение с товарами на амазон, chainreactioncycles

технологии - java - (1.7)
база данных - mysql
non-sql база данных - выбрать open source
ejb - часть функций продубировать на ejb - посмотреть как это будет работать

1. клиентская часть
-выбрать визуализацию - как получать интерфейс

2. серверная часть
-спроектировать сущности системы



==задачи
-базовые функции системы
-роли в системе
-построить шаблон для приложения(чтобы собиралось, запускалось, запускались юнит-тесты)
-что такое хорошая архитектура - почитать подумать
-выбрать сервер приложений(tomcat скорее всего)




====требования по технологиям

1. базовые навыки HTML, CSS, JQuery
2. Уверенное владение Spring MVC(Framework, MVC, Security, Data, Integration)
3. Хорошее знание JavaCore(коллекции, многопоточность - способность сделать дед-лок и потом его исправить)
4. Хорошее знание паттернов проектирования (особенно MVC)
4.1 шаблоны enterprise-проектирования
5. Опыт веб разработок (backend и frontend)
6. design principles (DRY, KISS, SOLID etc)
7. Основы MyBatis
8. Опыт работы с MySQL, хорошее владение языком запросов, основы проектирования БД, понимание транзакций.
Опыт оптимизации запросов приветствуется;
9. нормализация БД
10. extjs, ajax, node.js
11. android, ios
12. придумать алгоритм, оценить его сложность, оптимизировать его, теория алгоритмов и структур данных
13. конечные автоматы - теория и способы реализации
14. компиляторы - способность придумать свой язык, написать для него транслятор
15. понимание ООП
16. jsp, jstl, servlets
17. Опыт проектирования высоконагруженных систем, анализа и оптимизации производительности;
18. Опыт разработки высоконагруженных веб-сервисов (технологии масштабирования и кэширования);
19. JVM memory model
20. functional programming concepts(scala, haskel)
21. Experience with Hadoop stack (Hadoop MR, HBase, Pig, Hive, Flume)
Experience with in-stream processing (Storm, Kafka, Cassandra or other technologies)
Knowledge of public clouds (Amazon, Google CE or other)
Monitoring systems (Ganglia, Graphite, Zabbix)
22. rest service - реализация
23. web-service - реализация
24. разговорный английский язык(произношение, стандартные фразы)
25. xslt
26. работа с большими данными - xml, string, database
27. hash-функции - применение, типы
28. jdbc
29. инструменты проектирования информационных систем
30. Опыт работы с системами контекстного поиска (Solr, Elasticssearch, Sphinx)
31. Опыт разработки масштабируемых, отказоустойчивых систем
32. ejb
33. jfs
34. jaxp, jaxb - xml parsers
35. jpa, hibernate
36. понимание UML
37. java garbage collector, generics
38. jms
39. теория сложности, теория графов
41. создать, дописать файл(бинарный, текстовый, болшьой)
42. профилирование
43. Владение основами  UML, умение читать документацию и формулировать свои мысли в виде диаграмм,
а также в письменном виде, доступном для понимания другими людьми.
44.  Хорошее понимание  технологии Sming (Модель событий, многопоточное программирование и т. д.) и ее применения.
Знакомства и опыт  работы с графическими  библиотеками. Опыт работы с библиотекой "Jung" особенно приветствуется.
45. Проектирование и реализация публичного API;
46. Experience with Big Data technologies, NoSQL  (e.g. Cassandra) databases, Hadoop, Spark, ElasticSearch, Lucene,
distributed caching, Amazon services
47. Good knowledge of server-side technologies - REST-based protocols, Web services, Java server side monitoring and troubleshooting techniques, distributed systems design, authorization and authentication systems, caching techniques
Knowledge of Java application performance analysis techniques - monitoring, profiling
48. разработка кастомного протокола - бинарный, текстовый - (изучить tcp и http)
49. web mobile development
50. rich client mobile development(app store, etc.)
51. когда я полностью пройду книги "Жемчужины программирования", "Этюды для программистов" - тогда это будет уже совсем другой уровень
52. GWT, java server faces
53. node.js, ext.js(java-script используется повсеместно)
54. db2, mainframe
55. реализация приложения для мульти-нод режимов работы - томкат, jboss
56. Опыт разработки высокопроизводительных многопоточных приложений
57. Хорошее понимание принципов работы распределенных БД, анализ планов запросов, индексирование, партицирование
58. Отличное знание java, multi-threaded и concurrent programming.
59. что такое deadlock.
60. Как безопасно передать данные из одного потока в другой.
61. Что такое java.util.concurrent.locks.ReadWriteLock
62. Опыт самостоятельного проектирования систем, включая решение проблем кластеризации, разворачивания
63. Опыт проектирование структуры БД для enterprise приложения


===javascript\web

1. single page application
2. Знание и умение применять ООП в JS
3. angular
4. backbone
5. react
6. Опыт применения на практике tdd и bdd при написании javascript кода
7. Опыт работы с svg, canvas
8. Весь код покрывается тестами: от unit-тестов, написанных программистами еще до реализации задачи и до интеграционных и приемочных тестов
9. jquery
10. reflux
11. HTML5/CSS/LESS/SASS
12. опыта работы с SockJS, WebSocket;
13. опыта работы с MQTT, CoAP приветствуется;
14. Создание мультибраузерного UI
15. MongoDB
16. Знание и использование стандартов W3C
17. опыт кросс-браузерной верстки
18. опыт применения HTML5 и CSS3
19. Отличное знание HTML, CSS, JavaScript, DOM, AJAX, jQuery
20. Knowledge of Django / Flask or other Python web framework
21. Знание и опыт разработки плагинов и расширений браузеров, разметка XUL
22. Знание и опыт работы с фронтендом: верстка, отличное знание CSS и HTML
23. Опыт работы со сторонними API (соц. сети, карты)
24. Кроссбраузерная адаптивная верстка
25. Понимание почему может утекать память, знание как профилировать и оптимизировать код
26. Верстка по методологии BEM
27. Промышленный опыт разработки нативных приложений под Android и/или iOS
28. Gulp и/или Grunt
29. ES6
30. node.js — знать или иметь опыт написания клиентского сервера
31. уметь использовать паттерны (constructor, module, namespace) и понимать как наследуются прототипы;
32. разработка сложных responsive сайтов
33. redis

====определение проекта

1. Какой функционал реализовать как показатель уровня разработчика
(что ждем на выходе в сентябре)
-сайт, доступный из интернета, где будет отображаться информация по товарам
с других вело-сайтов

--технические фичи
-исходный код может компоноваться и war, jar, ear
-используется код, в зависимости от сервера приложений
-горячая смена свойств приложения
-приложение можно инсталлировать и деинсталлировать
-поддерживаемые базы данных - mysql, postgres
-тесты будут прогоняться на sqlite-базе
-в приложении применить механизм транзакций
-должен быть опрос сайтов по расписанию
-демон на c++, который будет самостоятельно крутиться и взаимодействовать с java
-легкая смена базы данных - если нужно - чтоб все работало на sqlite
-живой поиск по набираемому тексту - если слово есть в словаре, и его нет на сайтах - на сайты магазинов отправляется
эта информация(можно продавать?)
-web-socket
-tcp-socket
-slf4j/logback

2. Какие инструменты и технологии буду использовать
-spring mvc
-hibernate
-mysql
-tomcat
-cassandra
-sonar
-bitbucket
-git
-maven

3. Какие принципы будут использоваться при разработке
-TDD


===оперативные цели и задачи
-структура для веб-приложения
-auto deploy from maven to local tomcat(think of remote tomcat deployment service) - копирование, средство среды разработки, через url - рассмотреть плюсы и минус
-На собеседовании по J2EE заставляют тестироваться в BrainBanch
а так же дают написать небольшое web-приложение. Отображение данных из двух связанных по ключу таблиц.
-после того, как я реализую шаблон своего приложения, нужно будет взять эталонное приложение и  сравнить его со своим
-deploy to tomcat using context.xml(цель - определить свой application web context)
--одновременная упаковка через maven - как war and ear

=======СЛЕДУЕТ ИМЕТЬ ВВИДУ=============
ПРИ ЗП = 90  ТЫС.РУБ. - ОДИН ДЕНЬ ПРОСТОЯ СТОИТ - 90 \ 23 = 3.900 РУБ - Т.Е. Я ТЕРЯЮ ЭТИ ДЕНЬГИ,
КОТОРЫЕ МОГ БЫ ЗАРАБОТАТЬ

-когда закончу каркас приложения - дать на ревью Вадиму и также - чтобы он провел интервью по java




===оперативные задачи
--реализовать простой ejb на jboss - попробовать сделать ear
--сделать установку в jboss через ear
--добавить логгирование в систему
--вынести заголовок в файл