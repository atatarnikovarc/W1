Pred-install:
-1. you work at unix, otherwise adopt dependent steps into your OS's manner
 0. you've got administrator's priveleges at your machine
 1. make sure you have node.js installed
 2. execute 'sudo npm install -g forever' at command line if node.js' 'forever' package is not installed
 2. before start using these servers run 'npm link' command in root of 'rtl_service' folder

Description:
1. './start.sh' to start
2. './stop.sh' to stop


-0. отослать что то с генератора на приемник, на приемнике вывести в лог
1. как сделать сервер(любой)
2. как сэмулировать движение по кругу в реальном времени
3. как организовать сервис - который будет отдавать данные
5. как организовать сервер, который будет принимат данные
6. что такое сглаживание данных
7. как сделать чтоб сервер отдавал данные для N пользователей
8. как достоверно замерить время обработки
9. как стартовать, останавливать севера

Предлагаемое решение:
3 сервера, которые общаются между собой по протоколу tcp
данные передаются в бинарном кодированном виде(закодировать\отправить\раскодировать)


Общее описание:
Имеется некий источник данных, генерирующий 2 типа пакетов в реальном времени:
координаты устройства (latitude, longitude, altitude),
уровень заряда батареи для устройства.

Основной сервер, на разработку которого и надо сделать упор, осуществляет постобработку
поступающих из источника данных и максимально быстро отдает их на клиент. Постобработка
заключается в следующем: данные о локации необходимо сглаживать (любым способом) и определять
направление движения. Так же основной сервер генерирует 2 типа событий(батарея заряжена - уровень
 заряда 100% и батарея разряжена - уровень заряда меньше 10%).  Обработанные данные забираются
  клиентом максимально быстро.

Детали:
Источник данных - примитивный сервер на nodeJS, который умеет генерировать локации и уровень
заряда батареи для N (по умолчанию 100 000) устройств и предоставляет интерфейс, для того,
чтобы эти данные забирать. Локации эмулируют перемещение устройства по окружности с центром в
точке O и радиусом R. К координатам добавляется искусственная погрешность. Заряд батареи изменяется
 со 100% до 0% циклически с периодом T. T, R, O, N - конфигурируемые параметры.

Клиент - страница в браузере, которая может ничего не отображать, или еще один сервер на nodeJS.

Основной сервер должен обеспечивать минимальную временную задержку между моментом генерации пакета
локации и обработкой ее на клиенте.